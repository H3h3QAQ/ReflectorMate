<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.yulate.ReflectorMate</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>ReflectorMate</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="yulate531@gmail.com" url="https://www.yulate.com">yulate</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
ReflectorMate is a powerful IntelliJ IDEA plugin designed to simplify and accelerate your Java development workflow. With ReflectorMate, you can effortlessly generate reflection-based methods, like `setFieldValue`, and other boilerplate code through a simple right-click action.

### Key Features:
- **Automated Reflection Method Generation:** Quickly generate methods for setting and getting field values using reflection, reducing the need for manual coding.
- **Maven Dependency Management:** Easily add Maven dependencies directly to your `pom.xml` with a few clicks, streamlining project configuration.
- **Intelligent Import Handling:** Automatically manage import statements, ensuring that only necessary imports are added while optimizing and formatting your code.
- **User-Friendly Interface:** Seamlessly integrates into IntelliJ IDEA, offering context-sensitive actions accessible through the right-click menu.

Whether you're working on a complex project or just need to speed up your coding process, ReflectorMate provides the tools you need to stay productive and focused on what matters most—writing great code.

]]></description>


    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">

    </extensions>

    <actions>
        <!-- 在右键菜单中添加“Generate Reflection Methods”组 -->
        <group id="com.example.ReflectorMate.GenerateReflectionMethods" text="Generate Reflection Methods" popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>

<!--            &lt;!&ndash; 定义子菜单项 &ndash;&gt;-->
<!--            <action id="com.example.ReflectorMate.GenerateUnserialize"-->
<!--                    class="com.yulate.reflectormate.action.GenerateUnserializeAction"-->
<!--                    text="Unserialize"/>-->
<!--            <action id="com.example.ReflectorMate.GenerateSerialize"-->
<!--                    class="com.yulate.reflectormate.action.GenerateSerializeAction"-->
<!--                    text="Serialize"/>-->
<!--            <action id="com.example.ReflectorMate.GenerateSetFieldValue"-->
<!--                    class="com.yulate.reflectormate.action.GenerateSetFieldValueAction"-->
<!--                    text="Set Field Value"/>-->

<!--            <action id="com.example.ReflectorMate.GenerateGetField"-->
<!--                    class="com.yulate.reflectormate.action.GenerateGetFieldAction"-->
<!--                    text="Get Field Method"/>-->

<!--            <action id="com.example.ReflectorMate.GenerateGetFieldValue"-->
<!--                    class="com.yulate.reflectormate.action.GenerateGetFieldValueAction"-->
<!--                    text="Get Field Value Method"/>-->

<!--            <action id="com.example.ReflectorMate.GenerateGetFirstCtor"-->
<!--                    class="com.yulate.reflectormate.action.GenerateGetFirstCtorAction"-->
<!--                    text="Get First Constructor Method"/>-->

<!--            <action id="com.example.ReflectorMate.GenerateCreateWithConstructor"-->
<!--                    class="com.yulate.reflectormate.action.GenerateCreateWithConstructorAction"-->
<!--                    text="Create With Constructor Method"/>-->
        </group>
    </actions>

    <depends>com.intellij.java</depends>
    <depends>org.jetbrains.idea.maven</depends>


    <!--  注册启动类  -->
    <extensions defaultExtensionNs="com.intellij">
        <postStartupActivity implementation="com.yulate.reflectormate.MyStartupActivity"/>
    </extensions>


</idea-plugin>